# This is a basic workflow to help you get started with Actions

name: Build Release

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  mac_build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Install Node Dependencies
        run: npm i

      - name: Build UI
        run: |
          cd ui
          npm i 
          cd ..

      - name: Build Electron Main
        run: npm run build

      # Runs a single command using the runners shell
      - name: Package
        run: npx electron-builder -m --publish never

      - name: Cache electron build
        uses: actions/cache@v2
        key: ${{GITHUB_ACTION}}-mac-package
        with:
          path: |
            dist/*.dmg


      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos artifacts
          path: |
            dist/*.dmg

  win_build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Install Node Dependencies
        run: npm i

      - name: Install UI Dependencies
        run: |
          cd ui
          npm i 
          cd ..

      - name: Build Electron Main
        run: npm run build

      # Runs a single command using the runners shell
      - name: Package
        run: |
          npx electron-builder -w --publish never
          ls dist

      - name: Cache electron build
        uses: actions/cache@v2
        key: ${{GITHUB_ACTION}}-windows-package
        with:
          path: |
            dist/*.exe

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows artifacts
          path: |
            dist/*.exe
  linux_build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Install Node Dependencies
        run: npm i

      - name: Install UI Dependencies
        run: |
          cd ui
          npm i 
          cd ..

      - name: Build Electron Main
        run: npm run build

      # Runs a single command using the runners shell
      - name: Package
        run: |
          sudo apt-get install --no-install-recommends -y libopenjp2-tools
          npx electron-builder -l --publish never

      - name: Cache electron build
        uses: actions/cache@v2
        key: ${{GITHUB_ACTION}}-linux-package
        with:
          path: |
            dist/*.AppImage

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux artifacts
          path: |
            dist/*.AppImage
  create_release:
    # The type of runner that the job will run on
    needs: [mac_build,win_build,linux_build]
    if: (github.event_name == 'push' && contains(github.ref, '/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache electron build linux
        uses: actions/cache@v2
        key: ${{GITHUB_ACTION}}-linux-package
        with:
          path: |
            dist/*.AppImage
      - name: Cache electron build mac
        uses: actions/cache@v2
        key: ${{GITHUB_ACTION}}-mac-package
        with:
          path: |
            dist/*.dmg
      - name: Cache electron build windows
        uses: actions/cache@v2
        key: ${{GITHUB_ACTION}}-windows-package
        with:
          path: |
            dist/*.exe
      - name: Checking build files
        run: ls ./dist

      - name: Publishing release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*.*"
          body: "Automated Release"
          token: ${{ secrets.GITHUB_TOKEN }}
